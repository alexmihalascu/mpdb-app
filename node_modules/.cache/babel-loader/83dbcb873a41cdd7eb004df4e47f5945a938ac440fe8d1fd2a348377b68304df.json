{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst nopt = require('nopt');\nconst log = require('npmlog');\nconst childProcess = require('child_process');\nconst EE = require('events').EventEmitter;\nconst inherits = require('util').inherits;\nconst commands = [\n// Module build commands\n'build', 'clean', 'configure', 'rebuild',\n// Development Header File management commands\n'install', 'list', 'remove'];\nconst aliases = {\n  ls: 'list',\n  rm: 'remove'\n};\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp';\nfunction gyp() {\n  return new Gyp();\n}\nfunction Gyp() {\n  var self = this;\n  this.devDir = '';\n  this.commands = {};\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv);\n      return require('./' + command)(self, argv, callback);\n    };\n  });\n}\ninherits(Gyp, EE);\nexports.Gyp = Gyp;\nvar proto = Gyp.prototype;\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package.json');\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean,\n  // everywhere\n  arch: String,\n  // 'configure'\n  cafile: String,\n  // 'install'\n  debug: Boolean,\n  // 'build'\n  directory: String,\n  // bin\n  make: String,\n  // 'build'\n  msvs_version: String,\n  // 'configure'\n  ensure: Boolean,\n  // 'install'\n  solution: String,\n  // 'build' (windows only)\n  proxy: String,\n  // 'install'\n  noproxy: String,\n  // 'install'\n  devdir: String,\n  // everywhere\n  nodedir: String,\n  // 'configure'\n  loglevel: String,\n  // everywhere\n  python: String,\n  // 'configure'\n  'dist-url': String,\n  // 'install'\n  tarball: String,\n  // 'install'\n  jobs: String,\n  // 'build'\n  thin: String,\n  // 'configure'\n  'force-process-config': Boolean // 'configure'\n};\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n};\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases;\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts(argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv);\n  this.argv = this.opts.argv.remain.slice();\n  var commands = this.todo = [];\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg];\n    }\n    return arg;\n  }, this);\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg));\n      argv.shift();\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args;\n      }\n      commands.push({\n        name: arg,\n        args: []\n      });\n    }\n  }, this);\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0);\n  }\n\n  // support for inheriting config env variables from npm\n  var npmConfigPrefix = 'npm_config_';\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npmConfigPrefix) !== 0) {\n      return;\n    }\n    var val = process.env[name];\n    if (name === npmConfigPrefix + 'loglevel') {\n      log.level = val;\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npmConfigPrefix.length);\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) {\n        this.opts[name] = val;\n      }\n    }\n  }, this);\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel;\n  }\n  log.resume();\n};\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn(command, args, opts) {\n  if (!opts) {\n    opts = {};\n  }\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2];\n  }\n  var cp = childProcess.spawn(command, args, opts);\n  log.info('spawn', command);\n  log.info('spawn args', args);\n  return cp;\n};\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage() {\n  var str = ['', '  Usage: node-gyp <command> [options]', '', '  where <command> is one of:', commands.map(function (c) {\n    return '    - ' + c + ' - ' + require('./' + c).usage;\n  }).join('\\n'), '', 'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'), 'node@' + process.versions.node].join('\\n');\n  return str;\n};\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n  get: function () {\n    return this.package.version;\n  },\n  enumerable: true\n});\nmodule.exports = exports = gyp;","map":{"version":3,"names":["path","require","nopt","log","childProcess","EE","EventEmitter","inherits","commands","aliases","ls","rm","heading","gyp","Gyp","self","devDir","forEach","command","argv","callback","verbose","exports","proto","prototype","package","configDefs","help","Boolean","arch","String","cafile","debug","directory","make","msvs_version","ensure","solution","proxy","noproxy","devdir","nodedir","loglevel","python","tarball","jobs","thin","shorthands","release","C","j","silly","silent","parseArgv","parseOpts","opts","remain","slice","todo","map","arg","args","splice","indexOf","shift","length","push","name","npmConfigPrefix","Object","keys","process","env","val","level","substring","resume","spawn","stdio","cp","info","usage","str","c","join","version","resolve","__dirname","versions","node","defineProperty","get","enumerable","module"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/node-gyp/lib/node-gyp.js"],"sourcesContent":["'use strict'\n\nconst path = require('path')\nconst nopt = require('nopt')\nconst log = require('npmlog')\nconst childProcess = require('child_process')\nconst EE = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst commands = [\n  // Module build commands\n  'build',\n  'clean',\n  'configure',\n  'rebuild',\n  // Development Header File management commands\n  'install',\n  'list',\n  'remove'\n]\nconst aliases = {\n  ls: 'list',\n  rm: 'remove'\n}\n\n// differentiate node-gyp's logs from npm's\nlog.heading = 'gyp'\n\nfunction gyp () {\n  return new Gyp()\n}\n\nfunction Gyp () {\n  var self = this\n\n  this.devDir = ''\n  this.commands = {}\n\n  commands.forEach(function (command) {\n    self.commands[command] = function (argv, callback) {\n      log.verbose('command', command, argv)\n      return require('./' + command)(self, argv, callback)\n    }\n  })\n}\ninherits(Gyp, EE)\nexports.Gyp = Gyp\nvar proto = Gyp.prototype\n\n/**\n * Export the contents of the package.json.\n */\n\nproto.package = require('../package.json')\n\n/**\n * nopt configuration definitions\n */\n\nproto.configDefs = {\n  help: Boolean, // everywhere\n  arch: String, // 'configure'\n  cafile: String, // 'install'\n  debug: Boolean, // 'build'\n  directory: String, // bin\n  make: String, // 'build'\n  msvs_version: String, // 'configure'\n  ensure: Boolean, // 'install'\n  solution: String, // 'build' (windows only)\n  proxy: String, // 'install'\n  noproxy: String, // 'install'\n  devdir: String, // everywhere\n  nodedir: String, // 'configure'\n  loglevel: String, // everywhere\n  python: String, // 'configure'\n  'dist-url': String, // 'install'\n  tarball: String, // 'install'\n  jobs: String, // 'build'\n  thin: String, // 'configure'\n  'force-process-config': Boolean // 'configure'\n}\n\n/**\n * nopt shorthands\n */\n\nproto.shorthands = {\n  release: '--no-debug',\n  C: '--directory',\n  debug: '--debug',\n  j: '--jobs',\n  silly: '--loglevel=silly',\n  verbose: '--loglevel=verbose',\n  silent: '--loglevel=silent'\n}\n\n/**\n * expose the command aliases for the bin file to use.\n */\n\nproto.aliases = aliases\n\n/**\n * Parses the given argv array and sets the 'opts',\n * 'argv' and 'command' properties.\n */\n\nproto.parseArgv = function parseOpts (argv) {\n  this.opts = nopt(this.configDefs, this.shorthands, argv)\n  this.argv = this.opts.argv.remain.slice()\n\n  var commands = this.todo = []\n\n  // create a copy of the argv array with aliases mapped\n  argv = this.argv.map(function (arg) {\n    // is this an alias?\n    if (arg in this.aliases) {\n      arg = this.aliases[arg]\n    }\n    return arg\n  }, this)\n\n  // process the mapped args into \"command\" objects (\"name\" and \"args\" props)\n  argv.slice().forEach(function (arg) {\n    if (arg in this.commands) {\n      var args = argv.splice(0, argv.indexOf(arg))\n      argv.shift()\n      if (commands.length > 0) {\n        commands[commands.length - 1].args = args\n      }\n      commands.push({ name: arg, args: [] })\n    }\n  }, this)\n  if (commands.length > 0) {\n    commands[commands.length - 1].args = argv.splice(0)\n  }\n\n  // support for inheriting config env variables from npm\n  var npmConfigPrefix = 'npm_config_'\n  Object.keys(process.env).forEach(function (name) {\n    if (name.indexOf(npmConfigPrefix) !== 0) {\n      return\n    }\n    var val = process.env[name]\n    if (name === npmConfigPrefix + 'loglevel') {\n      log.level = val\n    } else {\n      // add the user-defined options to the config\n      name = name.substring(npmConfigPrefix.length)\n      // gyp@741b7f1 enters an infinite loop when it encounters\n      // zero-length options so ensure those don't get through.\n      if (name) {\n        this.opts[name] = val\n      }\n    }\n  }, this)\n\n  if (this.opts.loglevel) {\n    log.level = this.opts.loglevel\n  }\n  log.resume()\n}\n\n/**\n * Spawns a child process and emits a 'spawn' event.\n */\n\nproto.spawn = function spawn (command, args, opts) {\n  if (!opts) {\n    opts = {}\n  }\n  if (!opts.silent && !opts.stdio) {\n    opts.stdio = [0, 1, 2]\n  }\n  var cp = childProcess.spawn(command, args, opts)\n  log.info('spawn', command)\n  log.info('spawn args', args)\n  return cp\n}\n\n/**\n * Returns the usage instructions for node-gyp.\n */\n\nproto.usage = function usage () {\n  var str = [\n    '',\n    '  Usage: node-gyp <command> [options]',\n    '',\n    '  where <command> is one of:',\n    commands.map(function (c) {\n      return '    - ' + c + ' - ' + require('./' + c).usage\n    }).join('\\n'),\n    '',\n    'node-gyp@' + this.version + '  ' + path.resolve(__dirname, '..'),\n    'node@' + process.versions.node\n  ].join('\\n')\n  return str\n}\n\n/**\n * Version number getter.\n */\n\nObject.defineProperty(proto, 'version', {\n  get: function () {\n    return this.package.version\n  },\n  enumerable: true\n})\n\nmodule.exports = exports = gyp\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}