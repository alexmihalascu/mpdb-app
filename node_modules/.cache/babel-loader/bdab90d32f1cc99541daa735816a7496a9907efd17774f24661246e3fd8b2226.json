{"ast":null,"code":"var _jsxFileName = \"/Users/alexmihalascu/Desktop/mpdb-app/src/pages/register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./register.css\";\nimport sqlite3 from 'sqlite3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = new sqlite3.Database('mpdb-db', err => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Connected to the in-memory SQlite database.');\n});\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const sql = `INSERT INTO users (username, password) VALUES ('${username}', '${password}')`;\n    db.run(sql, err => {\n      if (err) {\n        console.error(err.message);\n        return;\n      }\n      console.log(`A row has been inserted with rowid ${this.lastID}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"center-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n_s(Register, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","sqlite3","db","Database","err","console","error","message","log","Register","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","sql","run","lastID","target","value"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/src/pages/register.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./register.css\"\nimport sqlite3 from 'sqlite3';\n\nconst db = new sqlite3.Database('mpdb-db', (err) => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Connected to the in-memory SQlite database.');\n});\n\nconst Register = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      const sql = `INSERT INTO users (username, password) VALUES ('${username}', '${password}')`;\ndb.run(sql, (err) => {\n  if (err) {\n    console.error(err.message);\n    return;\n  }\n  console.log(`A row has been inserted with rowid ${this.lastID}`);\n});\n  }\n  \n    return (\n      <form className=\"center-form\" onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n        </label>\n        <br />\n        <button type=\"submit\">Register</button>\n      </form>\n    );\n  };\n\n  export default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,OAAO,MAAM,SAAS;AAAC;AAE9B,MAAMC,EAAE,GAAG,IAAID,OAAO,CAACE,QAAQ,CAAC,SAAS,EAAGC,GAAG,IAAK;EAClD,IAAIA,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;EACAF,OAAO,CAACG,GAAG,CAAC,6CAA6C,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,GAAG,GAAI,mDAAkDP,QAAS,OAAME,QAAS,IAAG;IAChGV,EAAE,CAACgB,GAAG,CAACD,GAAG,EAAGb,GAAG,IAAK;MACnB,IAAIA,GAAG,EAAE;QACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;QAC1B;MACF;MACAF,OAAO,CAACG,GAAG,CAAE,sCAAqC,IAAI,CAACW,MAAO,EAAC,CAAC;IAClE,CAAC,CAAC;EACA,CAAC;EAEC,oBACE;IAAM,SAAS,EAAC,aAAa;IAAC,QAAQ,EAAEL,YAAa;IAAA,wBACnD;MAAA,WAAO,WAEL;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEJ,QAAS;QAAC,QAAQ,EAAGK,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACK,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9E,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,WAEL;QAAO,IAAI,EAAC,UAAU;QAAC,KAAK,EAAET,QAAS;QAAC,QAAQ,EAAGG,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACK,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClF,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEX,CAAC;AAAC,GA/BEZ,QAAQ;AAAA,KAARA,QAAQ;AAiCZ,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}