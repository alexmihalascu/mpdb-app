{"ast":null,"code":"const Minipass = require('minipass');\nconst _data = Symbol('_data');\nconst _length = Symbol('_length');\nclass Collect extends Minipass {\n  constructor(options) {\n    super(options);\n    this[_data] = [];\n    this[_length] = 0;\n  }\n  write(chunk, encoding, cb) {\n    if (typeof encoding === 'function') cb = encoding, encoding = 'utf8';\n    if (!encoding) encoding = 'utf8';\n    const c = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n    this[_data].push(c);\n    this[_length] += c.length;\n    if (cb) cb();\n    return true;\n  }\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') cb = chunk, chunk = null;\n    if (typeof encoding === 'function') cb = encoding, encoding = 'utf8';\n    if (chunk) this.write(chunk, encoding);\n    const result = Buffer.concat(this[_data], this[_length]);\n    super.write(result);\n    return super.end(cb);\n  }\n}\nmodule.exports = Collect;\n\n// it would be possible to DRY this a bit by doing something like\n// this.collector = new Collect() and listening on its data event,\n// but it's not much code, and we may as well save the extra obj\nclass CollectPassThrough extends Minipass {\n  constructor(options) {\n    super(options);\n    this[_data] = [];\n    this[_length] = 0;\n  }\n  write(chunk, encoding, cb) {\n    if (typeof encoding === 'function') cb = encoding, encoding = 'utf8';\n    if (!encoding) encoding = 'utf8';\n    const c = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding);\n    this[_data].push(c);\n    this[_length] += c.length;\n    return super.write(chunk, encoding, cb);\n  }\n  end(chunk, encoding, cb) {\n    if (typeof chunk === 'function') cb = chunk, chunk = null;\n    if (typeof encoding === 'function') cb = encoding, encoding = 'utf8';\n    if (chunk) this.write(chunk, encoding);\n    const result = Buffer.concat(this[_data], this[_length]);\n    this.emit('collect', result);\n    return super.end(cb);\n  }\n}\nmodule.exports.PassThrough = CollectPassThrough;","map":{"version":3,"names":["Minipass","require","_data","Symbol","_length","Collect","constructor","options","write","chunk","encoding","cb","c","Buffer","isBuffer","from","push","length","end","result","concat","module","exports","CollectPassThrough","emit","PassThrough"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/minipass-collect/index.js"],"sourcesContent":["const Minipass = require('minipass')\nconst _data = Symbol('_data')\nconst _length = Symbol('_length')\nclass Collect extends Minipass {\n  constructor (options) {\n    super(options)\n    this[_data] = []\n    this[_length] = 0\n  }\n  write (chunk, encoding, cb) {\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n\n    if (!encoding)\n      encoding = 'utf8'\n\n    const c = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding)\n    this[_data].push(c)\n    this[_length] += c.length\n    if (cb)\n      cb()\n    return true\n  }\n  end (chunk, encoding, cb) {\n    if (typeof chunk === 'function')\n      cb = chunk, chunk = null\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n    if (chunk)\n      this.write(chunk, encoding)\n    const result = Buffer.concat(this[_data], this[_length])\n    super.write(result)\n    return super.end(cb)\n  }\n}\nmodule.exports = Collect\n\n// it would be possible to DRY this a bit by doing something like\n// this.collector = new Collect() and listening on its data event,\n// but it's not much code, and we may as well save the extra obj\nclass CollectPassThrough extends Minipass {\n  constructor (options) {\n    super(options)\n    this[_data] = []\n    this[_length] = 0\n  }\n  write (chunk, encoding, cb) {\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n\n    if (!encoding)\n      encoding = 'utf8'\n\n    const c = Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding)\n    this[_data].push(c)\n    this[_length] += c.length\n    return super.write(chunk, encoding, cb)\n  }\n  end (chunk, encoding, cb) {\n    if (typeof chunk === 'function')\n      cb = chunk, chunk = null\n    if (typeof encoding === 'function')\n      cb = encoding, encoding = 'utf8'\n    if (chunk)\n      this.write(chunk, encoding)\n    const result = Buffer.concat(this[_data], this[_length])\n    this.emit('collect', result)\n    return super.end(cb)\n  }\n}\nmodule.exports.PassThrough = CollectPassThrough\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}