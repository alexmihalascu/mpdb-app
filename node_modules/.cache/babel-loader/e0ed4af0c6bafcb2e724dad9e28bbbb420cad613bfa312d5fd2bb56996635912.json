{"ast":null,"code":"'use strict';\n\nconst {\n  inspect\n} = require('util');\n\n// adapted from node's internal/errors\n// https://github.com/nodejs/node/blob/c8a04049/lib/internal/errors.js\n\n// close copy of node's internal SystemError class.\nclass SystemError {\n  constructor(code, prefix, context) {\n    // XXX context.code is undefined in all constructors used in cp/polyfill\n    // that may be a bug copied from node, maybe the constructor should use\n    // `code` not `errno`?  nodejs/node#41104\n    let message = `${prefix}: ${context.syscall} returned ` + `${context.code} (${context.message})`;\n    if (context.path !== undefined) {\n      message += ` ${context.path}`;\n    }\n    if (context.dest !== undefined) {\n      message += ` => ${context.dest}`;\n    }\n    this.code = code;\n    Object.defineProperties(this, {\n      name: {\n        value: 'SystemError',\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      },\n      info: {\n        value: context,\n        enumerable: true,\n        configurable: true,\n        writable: false\n      },\n      errno: {\n        get() {\n          return context.errno;\n        },\n        set(value) {\n          context.errno = value;\n        },\n        enumerable: true,\n        configurable: true\n      },\n      syscall: {\n        get() {\n          return context.syscall;\n        },\n        set(value) {\n          context.syscall = value;\n        },\n        enumerable: true,\n        configurable: true\n      }\n    });\n    if (context.path !== undefined) {\n      Object.defineProperty(this, 'path', {\n        get() {\n          return context.path;\n        },\n        set(value) {\n          context.path = value;\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n    if (context.dest !== undefined) {\n      Object.defineProperty(this, 'dest', {\n        get() {\n          return context.dest;\n        },\n        set(value) {\n          context.dest = value;\n        },\n        enumerable: true,\n        configurable: true\n      });\n    }\n  }\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n  [Symbol.for('nodejs.util.inspect.custom')](_recurseTimes, ctx) {\n    return inspect(this, {\n      ...ctx,\n      getters: true,\n      customInspect: false\n    });\n  }\n}\nfunction E(code, message) {\n  module.exports[code] = class NodeError extends SystemError {\n    constructor(ctx) {\n      super(code, message, ctx);\n    }\n  };\n}\nE('ERR_FS_CP_DIR_TO_NON_DIR', 'Cannot overwrite directory with non-directory');\nE('ERR_FS_CP_EEXIST', 'Target already exists');\nE('ERR_FS_CP_EINVAL', 'Invalid src or dest');\nE('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe');\nE('ERR_FS_CP_NON_DIR_TO_DIR', 'Cannot overwrite non-directory with directory');\nE('ERR_FS_CP_SOCKET', 'Cannot copy a socket file');\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY', 'Cannot overwrite symlink in subdirectory of self');\nE('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type');\nE('ERR_FS_EISDIR', 'Path is a directory');\nmodule.exports.ERR_INVALID_ARG_TYPE = class ERR_INVALID_ARG_TYPE extends Error {\n  constructor(name, expected, actual) {\n    super();\n    this.code = 'ERR_INVALID_ARG_TYPE';\n    this.message = `The ${name} argument must be ${expected}. Received ${typeof actual}`;\n  }\n};","map":{"version":3,"names":["inspect","require","SystemError","constructor","code","prefix","context","message","syscall","path","undefined","dest","Object","defineProperties","name","value","enumerable","writable","configurable","info","errno","get","set","defineProperty","toString","Symbol","for","_recurseTimes","ctx","getters","customInspect","E","module","exports","NodeError","ERR_INVALID_ARG_TYPE","Error","expected","actual"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/@npmcli/fs/lib/errors.js"],"sourcesContent":["'use strict'\nconst { inspect } = require('util')\n\n// adapted from node's internal/errors\n// https://github.com/nodejs/node/blob/c8a04049/lib/internal/errors.js\n\n// close copy of node's internal SystemError class.\nclass SystemError {\n  constructor (code, prefix, context) {\n    // XXX context.code is undefined in all constructors used in cp/polyfill\n    // that may be a bug copied from node, maybe the constructor should use\n    // `code` not `errno`?  nodejs/node#41104\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`\n\n    if (context.path !== undefined) {\n      message += ` ${context.path}`\n    }\n    if (context.dest !== undefined) {\n      message += ` => ${context.dest}`\n    }\n\n    this.code = code\n    Object.defineProperties(this, {\n      name: {\n        value: 'SystemError',\n        enumerable: false,\n        writable: true,\n        configurable: true,\n      },\n      message: {\n        value: message,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n      },\n      info: {\n        value: context,\n        enumerable: true,\n        configurable: true,\n        writable: false,\n      },\n      errno: {\n        get () {\n          return context.errno\n        },\n        set (value) {\n          context.errno = value\n        },\n        enumerable: true,\n        configurable: true,\n      },\n      syscall: {\n        get () {\n          return context.syscall\n        },\n        set (value) {\n          context.syscall = value\n        },\n        enumerable: true,\n        configurable: true,\n      },\n    })\n\n    if (context.path !== undefined) {\n      Object.defineProperty(this, 'path', {\n        get () {\n          return context.path\n        },\n        set (value) {\n          context.path = value\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n\n    if (context.dest !== undefined) {\n      Object.defineProperty(this, 'dest', {\n        get () {\n          return context.dest\n        },\n        set (value) {\n          context.dest = value\n        },\n        enumerable: true,\n        configurable: true,\n      })\n    }\n  }\n\n  toString () {\n    return `${this.name} [${this.code}]: ${this.message}`\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')] (_recurseTimes, ctx) {\n    return inspect(this, {\n      ...ctx,\n      getters: true,\n      customInspect: false,\n    })\n  }\n}\n\nfunction E (code, message) {\n  module.exports[code] = class NodeError extends SystemError {\n    constructor (ctx) {\n      super(code, message, ctx)\n    }\n  }\n}\n\nE('ERR_FS_CP_DIR_TO_NON_DIR', 'Cannot overwrite directory with non-directory')\nE('ERR_FS_CP_EEXIST', 'Target already exists')\nE('ERR_FS_CP_EINVAL', 'Invalid src or dest')\nE('ERR_FS_CP_FIFO_PIPE', 'Cannot copy a FIFO pipe')\nE('ERR_FS_CP_NON_DIR_TO_DIR', 'Cannot overwrite non-directory with directory')\nE('ERR_FS_CP_SOCKET', 'Cannot copy a socket file')\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY', 'Cannot overwrite symlink in subdirectory of self')\nE('ERR_FS_CP_UNKNOWN', 'Cannot copy an unknown file type')\nE('ERR_FS_EISDIR', 'Path is a directory')\n\nmodule.exports.ERR_INVALID_ARG_TYPE = class ERR_INVALID_ARG_TYPE extends Error {\n  constructor (name, expected, actual) {\n    super()\n    this.code = 'ERR_INVALID_ARG_TYPE'\n    this.message = `The ${name} argument must be ${expected}. Received ${typeof actual}`\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}