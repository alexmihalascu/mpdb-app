{"ast":null,"code":"const {\n  URL,\n  format\n} = require('url');\n\n// options passed to url.format() when generating a key\nconst formatOptions = {\n  auth: false,\n  fragment: false,\n  search: true,\n  unicode: false\n};\n\n// returns a string to be used as the cache key for the Request\nconst cacheKey = request => {\n  const parsed = new URL(request.url);\n  return `make-fetch-happen:request-cache:${format(parsed, formatOptions)}`;\n};\nmodule.exports = cacheKey;","map":{"version":3,"names":["URL","format","require","formatOptions","auth","fragment","search","unicode","cacheKey","request","parsed","url","module","exports"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/make-fetch-happen/lib/cache/key.js"],"sourcesContent":["const { URL, format } = require('url')\n\n// options passed to url.format() when generating a key\nconst formatOptions = {\n  auth: false,\n  fragment: false,\n  search: true,\n  unicode: false,\n}\n\n// returns a string to be used as the cache key for the Request\nconst cacheKey = (request) => {\n  const parsed = new URL(request.url)\n  return `make-fetch-happen:request-cache:${format(parsed, formatOptions)}`\n}\n\nmodule.exports = cacheKey\n"],"mappings":"AAAA,MAAM;EAAEA,GAAG;EAAEC;AAAO,CAAC,GAAGC,OAAO,CAAC,KAAK,CAAC;;AAEtC;AACA,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAE,KAAK;EACXC,QAAQ,EAAE,KAAK;EACfC,MAAM,EAAE,IAAI;EACZC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAIC,OAAO,IAAK;EAC5B,MAAMC,MAAM,GAAG,IAAIV,GAAG,CAACS,OAAO,CAACE,GAAG,CAAC;EACnC,OAAQ,mCAAkCV,MAAM,CAACS,MAAM,EAAEP,aAAa,CAAE,EAAC;AAC3E,CAAC;AAEDS,MAAM,CAACC,OAAO,GAAGL,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}