{"ast":null,"code":"'use strict';\n\nconst {\n  promisify\n} = require('util');\nconst handler = {\n  get: function (target, prop, receiver) {\n    if (typeof target[prop] !== 'function') {\n      return target[prop];\n    }\n    if (target[prop][promisify.custom]) {\n      return function () {\n        return Reflect.get(target, prop, receiver)[promisify.custom].apply(target, arguments);\n      };\n    }\n    return function () {\n      return new Promise((resolve, reject) => {\n        Reflect.get(target, prop, receiver).apply(target, [...arguments, function (err, result) {\n          if (err) {\n            return reject(err);\n          }\n          resolve(result);\n        }]);\n      });\n    };\n  }\n};\nmodule.exports = function (thingToPromisify) {\n  if (typeof thingToPromisify === 'function') {\n    return promisify(thingToPromisify);\n  }\n  if (typeof thingToPromisify === 'object') {\n    return new Proxy(thingToPromisify, handler);\n  }\n  throw new TypeError('Can only promisify functions or objects');\n};","map":{"version":3,"names":["promisify","require","handler","get","target","prop","receiver","custom","Reflect","apply","arguments","Promise","resolve","reject","err","result","module","exports","thingToPromisify","Proxy","TypeError"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/@gar/promisify/index.js"],"sourcesContent":["'use strict'\n\nconst { promisify } = require('util')\n\nconst handler = {\n  get: function (target, prop, receiver) {\n    if (typeof target[prop] !== 'function') {\n      return target[prop]\n    }\n    if (target[prop][promisify.custom]) {\n      return function () {\n        return Reflect.get(target, prop, receiver)[promisify.custom].apply(target, arguments)\n      }\n    }\n    return function () {\n      return new Promise((resolve, reject) => {\n        Reflect.get(target, prop, receiver).apply(target, [...arguments, function (err, result) {\n          if (err) {\n            return reject(err)\n          }\n          resolve(result)\n        }])\n      })\n    }\n  }\n}\n\nmodule.exports = function (thingToPromisify) {\n  if (typeof thingToPromisify === 'function') {\n    return promisify(thingToPromisify)\n  }\n  if (typeof thingToPromisify === 'object') {\n    return new Proxy(thingToPromisify, handler)\n  }\n  throw new TypeError('Can only promisify functions or objects')\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAM;EAAEA;AAAU,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAErC,MAAMC,OAAO,GAAG;EACdC,GAAG,EAAE,UAAUC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE;IACrC,IAAI,OAAOF,MAAM,CAACC,IAAI,CAAC,KAAK,UAAU,EAAE;MACtC,OAAOD,MAAM,CAACC,IAAI,CAAC;IACrB;IACA,IAAID,MAAM,CAACC,IAAI,CAAC,CAACL,SAAS,CAACO,MAAM,CAAC,EAAE;MAClC,OAAO,YAAY;QACjB,OAAOC,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC,CAACN,SAAS,CAACO,MAAM,CAAC,CAACE,KAAK,CAACL,MAAM,EAAEM,SAAS,CAAC;MACvF,CAAC;IACH;IACA,OAAO,YAAY;MACjB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCL,OAAO,CAACL,GAAG,CAACC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC,CAACG,KAAK,CAACL,MAAM,EAAE,CAAC,GAAGM,SAAS,EAAE,UAAUI,GAAG,EAAEC,MAAM,EAAE;UACtF,IAAID,GAAG,EAAE;YACP,OAAOD,MAAM,CAACC,GAAG,CAAC;UACpB;UACAF,OAAO,CAACG,MAAM,CAAC;QACjB,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;IACJ,CAAC;EACH;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG,UAAUC,gBAAgB,EAAE;EAC3C,IAAI,OAAOA,gBAAgB,KAAK,UAAU,EAAE;IAC1C,OAAOlB,SAAS,CAACkB,gBAAgB,CAAC;EACpC;EACA,IAAI,OAAOA,gBAAgB,KAAK,QAAQ,EAAE;IACxC,OAAO,IAAIC,KAAK,CAACD,gBAAgB,EAAEhB,OAAO,CAAC;EAC7C;EACA,MAAM,IAAIkB,SAAS,CAAC,yCAAyC,CAAC;AAChE,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}