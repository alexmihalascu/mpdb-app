{"ast":null,"code":"// given an input that may or may not be an object, return an object that has\n// a copy of every defined property listed in 'copy'. if the input is not an\n// object, assign it to the property named by 'wrap'\nconst getOptions = (input, _ref) => {\n  let {\n    copy,\n    wrap\n  } = _ref;\n  const result = {};\n  if (input && typeof input === 'object') {\n    for (const prop of copy) {\n      if (input[prop] !== undefined) {\n        result[prop] = input[prop];\n      }\n    }\n  } else {\n    result[wrap] = input;\n  }\n  return result;\n};\nmodule.exports = getOptions;","map":{"version":3,"names":["getOptions","input","copy","wrap","result","prop","undefined","module","exports"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/@npmcli/fs/lib/common/get-options.js"],"sourcesContent":["// given an input that may or may not be an object, return an object that has\n// a copy of every defined property listed in 'copy'. if the input is not an\n// object, assign it to the property named by 'wrap'\nconst getOptions = (input, { copy, wrap }) => {\n  const result = {}\n\n  if (input && typeof input === 'object') {\n    for (const prop of copy) {\n      if (input[prop] !== undefined) {\n        result[prop] = input[prop]\n      }\n    }\n  } else {\n    result[wrap] = input\n  }\n\n  return result\n}\n\nmodule.exports = getOptions\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,CAACC,KAAK,WAAqB;EAAA,IAAnB;IAAEC,IAAI;IAAEC;EAAK,CAAC;EACvC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAIH,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACtC,KAAK,MAAMI,IAAI,IAAIH,IAAI,EAAE;MACvB,IAAID,KAAK,CAACI,IAAI,CAAC,KAAKC,SAAS,EAAE;QAC7BF,MAAM,CAACC,IAAI,CAAC,GAAGJ,KAAK,CAACI,IAAI,CAAC;MAC5B;IACF;EACF,CAAC,MAAM;IACLD,MAAM,CAACD,IAAI,CAAC,GAAGF,KAAK;EACtB;EAEA,OAAOG,MAAM;AACf,CAAC;AAEDG,MAAM,CAACC,OAAO,GAAGR,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}