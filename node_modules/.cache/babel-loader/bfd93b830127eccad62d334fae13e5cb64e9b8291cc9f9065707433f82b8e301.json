{"ast":null,"code":"var _jsxFileName = \"/Users/alexmihalascu/Desktop/mpdb-app/src/pages/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./login.css\";\nimport sqlite3 from 'sqlite3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = new sqlite3.Database('mpdb-db', err => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Connected to the in-memory SQlite database.');\n});\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const sql = `SELECT * FROM users WHERE username = '${username}' AND password = '${password}'`;\n    db.get(sql, (err, row) => {\n      if (err) {\n        console.error(err.message);\n      }\n      if (row) {\n        console.log('User is logged in');\n      } else {\n        console.log('Invalid username or password');\n      }\n    });\n    db.close(err => {\n      if (err) {\n        console.error(err.message);\n      }\n      console.log('Close the database connection.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"center-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Register \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","sqlite3","db","Database","err","console","error","message","log","Login","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","sql","get","row","close","target","value"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/src/pages/login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./login.css\";\nimport sqlite3 from 'sqlite3';\n\nconst db = new sqlite3.Database('mpdb-db', (err) => {\n  if (err) {\n    console.error(err.message);\n  }\n  console.log('Connected to the in-memory SQlite database.');\n});\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const sql = `SELECT * FROM users WHERE username = '${username}' AND password = '${password}'`;\n    db.get(sql, (err, row) => {\n        if (err) {\n            console.error(err.message);\n        }\n        if (row) {\n            console.log('User is logged in');\n        } else {\n            console.log('Invalid username or password');\n        }\n    });\n    db.close((err) => {\n        if (err) {\n            console.error(err.message);\n        }\n        console.log('Close the database connection.');\n    });\n}\n\n\n  \n  \n\n  return (\n    <form className=\"center-form\" onSubmit={handleSubmit}>\n      <label>\n        Username:\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Password:\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <br />\n      <button type=\"submit\">Login</button>\n      <Link to='/register'>\n        <button> Register </button>\n        </Link>\n    </form>\n  );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,SAAS;AAAC;AAE9B,MAAMC,EAAE,GAAG,IAAID,OAAO,CAACE,QAAQ,CAAC,SAAS,EAAGC,GAAG,IAAK;EAClD,IAAIA,GAAG,EAAE;IACPC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B;EACAF,OAAO,CAACG,GAAG,CAAC,6CAA6C,CAAC;AAC5D,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,GAAG,GAAI,yCAAwCP,QAAS,qBAAoBE,QAAS,GAAE;IAC7FV,EAAE,CAACgB,GAAG,CAACD,GAAG,EAAE,CAACb,GAAG,EAAEe,GAAG,KAAK;MACtB,IAAIf,GAAG,EAAE;QACLC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;MAC9B;MACA,IAAIY,GAAG,EAAE;QACLd,OAAO,CAACG,GAAG,CAAC,mBAAmB,CAAC;MACpC,CAAC,MAAM;QACHH,OAAO,CAACG,GAAG,CAAC,8BAA8B,CAAC;MAC/C;IACJ,CAAC,CAAC;IACFN,EAAE,CAACkB,KAAK,CAAEhB,GAAG,IAAK;MACd,IAAIA,GAAG,EAAE;QACLC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;MAC9B;MACAF,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAMC,oBACE;IAAM,SAAS,EAAC,aAAa;IAAC,QAAQ,EAAEM,YAAa;IAAA,wBACnD;MAAA,WAAO,WAEL;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEJ,QAAS;QAAC,QAAQ,EAAGK,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACM,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9E,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,WAEL;QAAO,IAAI,EAAC,UAAU;QAAC,KAAK,EAAEV,QAAS;QAAC,QAAQ,EAAGG,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACM,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClF,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,eACpC,QAAC,IAAI;MAAC,EAAE,EAAC,WAAW;MAAA,uBAClB;QAAA,UAAQ;MAAU;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,GA/CIb,KAAK;AAAA,KAALA,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}