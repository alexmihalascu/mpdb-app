{"ast":null,"code":"const fs = require('./fs.js');\nconst getOptions = require('./common/get-options.js');\nconst owner = require('./common/owner.js');\nconst writeFile = async (file, data, opts) => {\n  const options = getOptions(opts, {\n    copy: ['encoding', 'mode', 'flag', 'signal', 'owner'],\n    wrap: 'encoding'\n  });\n  const {\n    uid,\n    gid\n  } = await owner.validate(file, options.owner);\n  const result = await fs.writeFile(file, data, options);\n  await owner.update(file, uid, gid);\n  return result;\n};\nmodule.exports = writeFile;","map":{"version":3,"names":["fs","require","getOptions","owner","writeFile","file","data","opts","options","copy","wrap","uid","gid","validate","result","update","module","exports"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/@npmcli/fs/lib/write-file.js"],"sourcesContent":["const fs = require('./fs.js')\nconst getOptions = require('./common/get-options.js')\nconst owner = require('./common/owner.js')\n\nconst writeFile = async (file, data, opts) => {\n  const options = getOptions(opts, {\n    copy: ['encoding', 'mode', 'flag', 'signal', 'owner'],\n    wrap: 'encoding',\n  })\n  const { uid, gid } = await owner.validate(file, options.owner)\n\n  const result = await fs.writeFile(file, data, options)\n\n  await owner.update(file, uid, gid)\n\n  return result\n}\n\nmodule.exports = writeFile\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC7B,MAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACrD,MAAME,KAAK,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE1C,MAAMG,SAAS,GAAG,OAAOC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC5C,MAAMC,OAAO,GAAGN,UAAU,CAACK,IAAI,EAAE;IAC/BE,IAAI,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC;IACrDC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAG,MAAMT,KAAK,CAACU,QAAQ,CAACR,IAAI,EAAEG,OAAO,CAACL,KAAK,CAAC;EAE9D,MAAMW,MAAM,GAAG,MAAMd,EAAE,CAACI,SAAS,CAACC,IAAI,EAAEC,IAAI,EAAEE,OAAO,CAAC;EAEtD,MAAML,KAAK,CAACY,MAAM,CAACV,IAAI,EAAEM,GAAG,EAAEC,GAAG,CAAC;EAElC,OAAOE,MAAM;AACf,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGb,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}