{"ast":null,"code":"const fs = require('../fs.js');\nconst getOptions = require('../common/get-options.js');\nconst node = require('../common/node.js');\nconst owner = require('../common/owner.js');\nconst polyfill = require('./polyfill.js');\n\n// node 10.12.0 added the options parameter, which allows recursive and mode\n// properties to be passed\nconst useNative = node.satisfies('>=10.12.0');\n\n// extends mkdir with the ability to specify an owner of the new dir\nconst mkdir = async (path, opts) => {\n  const options = getOptions(opts, {\n    copy: ['mode', 'recursive', 'owner'],\n    wrap: 'mode'\n  });\n  const {\n    uid,\n    gid\n  } = await owner.validate(path, options.owner);\n\n  // the polyfill is tested separately from this module, no need to hack\n  // process.version to try to trigger it just for coverage\n  // istanbul ignore next\n  const result = useNative ? await fs.mkdir(path, options) : await polyfill(path, options);\n  await owner.update(path, uid, gid);\n  return result;\n};\nmodule.exports = mkdir;","map":{"version":3,"names":["fs","require","getOptions","node","owner","polyfill","useNative","satisfies","mkdir","path","opts","options","copy","wrap","uid","gid","validate","result","update","module","exports"],"sources":["/Users/alexmihalascu/Desktop/mpdb-app/node_modules/@npmcli/fs/lib/mkdir/index.js"],"sourcesContent":["const fs = require('../fs.js')\nconst getOptions = require('../common/get-options.js')\nconst node = require('../common/node.js')\nconst owner = require('../common/owner.js')\n\nconst polyfill = require('./polyfill.js')\n\n// node 10.12.0 added the options parameter, which allows recursive and mode\n// properties to be passed\nconst useNative = node.satisfies('>=10.12.0')\n\n// extends mkdir with the ability to specify an owner of the new dir\nconst mkdir = async (path, opts) => {\n  const options = getOptions(opts, {\n    copy: ['mode', 'recursive', 'owner'],\n    wrap: 'mode',\n  })\n  const { uid, gid } = await owner.validate(path, options.owner)\n\n  // the polyfill is tested separately from this module, no need to hack\n  // process.version to try to trigger it just for coverage\n  // istanbul ignore next\n  const result = useNative\n    ? await fs.mkdir(path, options)\n    : await polyfill(path, options)\n\n  await owner.update(path, uid, gid)\n\n  return result\n}\n\nmodule.exports = mkdir\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,UAAU,CAAC;AAC9B,MAAMC,UAAU,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACtD,MAAME,IAAI,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AACzC,MAAMG,KAAK,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE3C,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,eAAe,CAAC;;AAEzC;AACA;AACA,MAAMK,SAAS,GAAGH,IAAI,CAACI,SAAS,CAAC,WAAW,CAAC;;AAE7C;AACA,MAAMC,KAAK,GAAG,OAAOC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,OAAO,GAAGT,UAAU,CAACQ,IAAI,EAAE;IAC/BE,IAAI,EAAE,CAAC,MAAM,EAAE,WAAW,EAAE,OAAO,CAAC;IACpCC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM;IAAEC,GAAG;IAAEC;EAAI,CAAC,GAAG,MAAMX,KAAK,CAACY,QAAQ,CAACP,IAAI,EAAEE,OAAO,CAACP,KAAK,CAAC;;EAE9D;EACA;EACA;EACA,MAAMa,MAAM,GAAGX,SAAS,GACpB,MAAMN,EAAE,CAACQ,KAAK,CAACC,IAAI,EAAEE,OAAO,CAAC,GAC7B,MAAMN,QAAQ,CAACI,IAAI,EAAEE,OAAO,CAAC;EAEjC,MAAMP,KAAK,CAACc,MAAM,CAACT,IAAI,EAAEK,GAAG,EAAEC,GAAG,CAAC;EAElC,OAAOE,MAAM;AACf,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGZ,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}